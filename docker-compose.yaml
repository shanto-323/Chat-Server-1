services:
  scylla:
    container_name: scyllaDb
    image: scylladb/scylla:latest
    ports:
      - 9042:9042
    healthcheck:
      test: [ "CMD-SHELL", "nodetool status | grep UN || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  migration:
    image: scylladb/scylla:latest
    depends_on:
      scylla:
        condition: service_healthy
    volumes:
      - ./backend/pkg/storage/migration:/migrations
    entrypoint: [ "sh", "-c", "until cqlsh scyllaDb -e 'DESC KEYSPACES'; do echo 'Waiting for ScyllaDB to be ready...'; sleep 5; done; cqlsh scyllaDb -f /migrations/001_keyspace.cql && cqlsh scyllaDb -f /migrations/003_offline_table.cql && cqlsh scyllaDb -f /migrations/002_chat_table.cql " ]
    restart: "no"

  redis:
    container_name: redis1
    image: redis:8.2-m01-alpine3.22
    command: [ "redis-server", "--requirepass", "123456" ]
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli -a 123456 ping | grep pong || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  socket:
    container_name: socket
    build:
      context: .
      dockerfile: ./backend/pkg/app.dockerfile
    depends_on:
      - redis
      - scylla
    ports:
      - 8080:8080
    restart: on-failure
